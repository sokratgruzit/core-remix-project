// eslint-disable-next-line no-use-before-define
import { CustomTooltip } from "@remix-ui/helper";
import React from "react";
import { InstanceContainerProps } from "../types";
import { UniversalDappUI } from "./universalDappUI";
import { CornerDecorYellow } from "@remix-ui/helper";

export function InstanceContainerUI(props: InstanceContainerProps) {
  const { instanceList } = props.instances;

  const clearInstance = () => {
    props.clearInstances();
  };

  return (
    <div className="udapp_instanceContainer mt-3 border-0 list-group-item">
      <div className="d-flex justify-content-between align-items-center pl-2 mb-2">
        <CustomTooltip
          placement="top-start"
          tooltipClasses="text-nowrap"
          tooltipId="deployAndRunClearInstancesTooltip"
          tooltipText={
            "Autogenerated generic user interfaces for interaction with deployed contracts"
          }
        >
          <label className="udapp_deployedContracts">Deployed Contracts</label>
        </CustomTooltip>
        {instanceList.length > 0 ? (
          <CustomTooltip
            placement="right"
            tooltipClasses="text-nowrap"
            tooltipId="deployAndRunClearInstancesTooltip"
            tooltipText={"Clear instances list and reset recorder"}
          >
            <i
              className="mr-2 udapp_icon far fa-trash-alt"
              data-id="deployAndRunClearInstances"
              onClick={clearInstance}
              aria-hidden="true"
            ></i>
          </CustomTooltip>
        ) : null}
      </div>
      {instanceList.length > 0 ? (
        <div>
          {" "}
          {props.instances.instanceList.map((instance, index) => {
            return (
              <UniversalDappUI
                key={instance.address}
                instance={instance}
                context={props.getContext()}
                removeInstance={props.removeInstance}
                index={index}
                gasEstimationPrompt={props.gasEstimationPrompt}
                passphrasePrompt={props.passphrasePrompt}
                mainnetPrompt={props.mainnetPrompt}
                runTransactions={props.runTransactions}
                sendValue={props.sendValue}
                getFuncABIInputs={props.getFuncABIInputs}
              />
            );
          })}
        </div>
      ) : (
        <span
          className=" mt-3 w-100 d-flex justify-content-center align-items-center font-12 p-4"
          style={{ position: "relative", height: "100px", color: "#D19042" }}
          data-id="deployAndRunNoInstanceText"
          role="alert"
        >
          <CornerDecorYellow />
          Currently you have no contract instances to interact with.
        </span>
      )}
    </div>
  );
}
