import React from "react"

import { NavLink } from "react-router-dom"
import { AppContext } from "../AppContext"
import { ThemeType } from "../types"

interface Props {
  title?: string
  showBackButton?: boolean
  from: string
}

interface IconProps {
  from: string
  themeType: ThemeType
}

const HomeIcon: React.FC<IconProps> = ({ from, themeType }: IconProps) => {
  return (
    <NavLink
      data-id="home"
      data-toggle="tooltip"
      data-placement="top"
      title="Home"
      to={{
        pathname: "/"
      }}
      state={ from }
      style={isActive => {
        return {
          ...(isActive ? getStyleFilterIcon(themeType) : {}), ...{ marginRight: "0.4em" }
        }
      }}
    >
      <svg 
        width="134" 
        height="50" 
        viewBox="0 0 134 50" 
        fill="none" 
        xmlns="http://www.w3.org/2000/svg"
        className="bi bi-house-door-fill"
      >
        <g clip-path="url(#clip0)">
            <path fillRule="evenodd" clipRule="evenodd" d="M9.2857 13.0173C11.2283 10.4394 13.7734 8.37996 16.6966 7.02034C19.6199 5.66073 22.8317 5.04262 26.0493 5.22045C29.2668 5.39829 32.3915 6.36661 35.148 8.04015C37.9045 9.71368 40.2083 12.0411 41.8566 14.8174L43.2803 14.0244L45.6531 12.6287C43.5243 9.03784 40.501 6.06366 36.8798 3.99802C33.2586 1.93238 29.1639 0.846264 24.9977 0.846264C20.8315 0.846264 16.7368 1.93238 13.1156 3.99802C9.49439 6.06366 6.47106 9.03784 4.34233 12.6287L3.16383 14.4844L5.04627 15.6025L12.3308 19.9404C11.1393 22.945 11.0564 26.2772 12.0969 29.3376C13.1374 32.398 15.2332 34.9855 18.0069 36.6347C20.7807 38.2839 24.0504 38.8864 27.2278 38.3338C30.4051 37.7811 33.2815 36.1097 35.3392 33.6202L40.6464 36.7924C38.7033 39.3725 36.1567 41.4335 33.2313 42.7934C30.3058 44.1533 27.0915 44.7703 23.872 44.5901C20.6525 44.4098 17.5267 43.4378 14.7704 41.7598C12.0142 40.0818 9.7122 37.7494 8.06765 34.9684L4.31069 37.1968C6.43943 40.7876 9.46275 43.7618 13.084 45.8275C16.7052 47.8931 20.7998 48.9792 24.9661 48.9792C29.1323 48.9792 33.227 47.8931 36.8482 45.8275C40.4694 43.7618 43.4927 40.7876 45.6214 37.1968L46.7446 35.3094L44.8621 34.1912L38.8826 30.6305L33.7257 27.6487C33.0979 29.6524 31.8052 31.3804 30.0624 32.5455C28.3196 33.7107 26.2316 34.2428 24.1455 34.0534C22.0593 33.8641 20.1006 32.9648 18.5947 31.5048C17.0889 30.0448 16.1267 28.1122 15.8679 26.028C15.6092 23.9439 16.0695 21.8337 17.1724 20.0482C18.2753 18.2626 19.9544 16.9092 21.9306 16.2129C23.9068 15.5165 26.0612 15.5192 28.0357 16.2204C30.0102 16.9216 31.686 18.2791 32.7845 20.0673L36.5731 17.8785C35.4601 16.0277 33.9225 14.47 32.0881 13.335C30.2538 12.1999 28.1756 11.5204 26.0266 11.3529C23.8775 11.1853 21.7196 11.5346 19.7323 12.3717C17.745 13.2088 15.9858 14.5095 14.6008 16.1656L9.2857 13.0173Z" fill="#FF7152"/>
        </g>
        <path d="M66.5034 34.7724C62.8229 34.7724 60.0186 33.8335 58.0907 31.9556C57.1006 30.916 56.3362 29.6845 55.8451 28.3378C55.354 26.9912 55.1468 25.5583 55.2364 24.1284C55.1482 22.6666 55.3529 21.2019 55.8386 19.8196C56.3244 18.4373 57.0814 17.165 58.0657 16.0768C59.9435 14.1407 62.7561 13.1686 66.5034 13.1603C67.658 13.1486 68.811 13.2488 69.9462 13.4594C70.9408 13.6433 71.92 13.9016 72.8756 14.2321V18.8313C70.9792 18.0478 68.9447 17.6494 66.8915 17.6597C66.032 17.5843 65.166 17.6835 64.3461 17.9513C63.5262 18.2192 62.7695 18.65 62.1218 19.2176C60.9898 20.5941 60.4418 22.3559 60.5945 24.1284C60.5213 24.9774 60.626 25.8323 60.9018 26.639C61.1776 27.4456 61.6186 28.1865 62.1969 28.8148C63.5358 29.9031 65.243 30.4384 66.9666 30.3104C67.987 30.3131 69.0054 30.2213 70.0087 30.0362C71.0083 29.8505 71.9858 29.5623 72.9257 29.1762V33.8003C71.9719 34.1071 70.997 34.3445 70.0087 34.5107C68.8499 34.6968 67.6772 34.7843 66.5034 34.7724Z" fill="white"/>
        <path d="M85.1202 34.7725C81.69 34.7725 79.086 33.9042 77.3084 32.1676C75.5307 30.431 74.6335 27.7305 74.6168 24.0662C74.6168 20.1775 75.5182 17.398 77.3084 15.703C79.0986 14.0079 81.69 13.2102 85.1202 13.2102C88.5504 13.2102 91.1418 14.0577 92.932 15.703C94.7222 17.3482 95.611 20.1775 95.611 24.0662C95.611 27.7305 94.7097 30.4351 92.932 32.1676C91.1543 33.9001 88.5378 34.7725 85.1202 34.7725ZM85.1202 30.3105C85.8463 30.3823 86.5793 30.2833 87.2599 30.0213C87.9405 29.7594 88.5498 29.3418 89.0386 28.8024C89.978 27.4083 90.419 25.74 90.2905 24.0662C90.4516 22.3112 90.0103 20.5537 89.0386 19.0806C88.5445 18.5656 87.9401 18.1681 87.2703 17.9178C86.6006 17.6675 85.8827 17.5707 85.1702 17.6348C84.452 17.5686 83.7279 17.6642 83.0518 17.9145C82.3756 18.1648 81.7647 18.5633 81.2643 19.0806C80.2861 20.5508 79.8442 22.3106 80.0124 24.0662C79.884 25.74 80.3249 27.4083 81.2643 28.8024C81.7489 29.3299 82.3483 29.7401 83.0166 30.0015C83.685 30.2629 84.4045 30.3686 85.1202 30.3105Z" fill="white"/>
        <path d="M98.2892 34.4485V13.4844H108.818C109.819 13.4019 110.826 13.5338 111.772 13.8713C112.718 14.2089 113.58 14.7442 114.301 15.4412C115.539 16.8981 116.17 18.7708 116.066 20.676C116.105 22.0034 115.729 23.31 114.989 24.4151C114.267 25.4807 113.243 26.309 112.047 26.7957C112.338 27.0173 112.588 27.2872 112.786 27.5934C113.025 27.9895 113.226 28.4067 113.387 28.8398L115.891 34.4983H110.382L108.029 29.1638C107.876 28.7685 107.616 28.4232 107.278 28.1667C106.897 27.9506 106.464 27.8428 106.026 27.8551H103.547V34.4983L98.2892 34.4485ZM103.547 23.767H107.441C108.309 23.8217 109.167 23.5504 109.844 23.0067C110.15 22.704 110.385 22.3387 110.534 21.9362C110.683 21.5337 110.743 21.1036 110.708 20.676C110.708 18.5821 109.694 17.5227 107.666 17.5227H103.547V23.767Z" fill="white"/>
        <path d="M118.746 34.4484V13.4843H134.282V17.5226H124.016V21.9223H133.068V26.0478H124.016V30.4101H134.282V34.4484H118.746Z" fill="white"/>
        <defs>
          <clipPath id="clip0">
              <rect width="49.8291" height="48.375" fill="white" transform="translate(0 0.8125)"/>
          </clipPath>
        </defs>
      </svg>
    </NavLink>
  )
}

const SettingsIcon: React.FC<IconProps> = ({ from, themeType }: IconProps) => {
  return (
    <NavLink
      data-toggle="tooltip"
      data-placement="top"
      title="Settings"
      to={{
        pathname: "/settings",
      }}
      state= {from}
      style={isActive => {
        return {
          ...(isActive ? getStyleFilterIcon(themeType) : {}), ...{ marginRight: "0.4em" }
        }
      }}
    >
      <svg
        style={{ filter: "invert(0.5)" }}
        width="1em"
        height="1em"
        viewBox="0 0 16 16"
        className="bi bi-gear-fill"
        fill="currentColor"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z"
        />

        <path
          fillRule="evenodd"
          d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z"
        />
      </svg>
    </NavLink>
  )
}

const getStyleFilterIcon = (themeType: ThemeType) => {
  const invert = themeType === "dark" ? 1 : 0
  const brightness = themeType === "dark" ? "150" : "0" // should be >100 for icons with color
  return {
    filter: `invert(${invert}) grayscale(1) brightness(${brightness}%)`,
  }
}

const ReceiptsIcon: React.FC<IconProps> = ({ from, themeType }: IconProps) => {
  return (
    <NavLink      
      data-toggle="tooltip"
      data-placement="top"
      title="Receipts"
      to={{
        pathname: "/receipts",
      }}
      state= { from }
      style={isActive => {
        return {
          ...(isActive ? getStyleFilterIcon(themeType) : {}), ...{ marginRight: "0.4em" }
        }
      }}
    >
      <svg
        style={{ filter: "invert(0.5)" }}
        width="1em"
        height="1em"
        viewBox="0 0 16 16"
        className="bi bi-receipt"
        fill="currentColor"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          d="M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z"
        />

        <path
          fillRule="evenodd"
          d="M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z"
        />
      </svg>
    </NavLink>
  )
}
export const HeaderWithSettings: React.FC<Props> = ({
  title = "",
  showBackButton = false,
  from,
}) => {
  return (
    <AppContext.Consumer>
      {({ themeType }) => (
        <div>
          <h6>{title}</h6>
          <div style={{ float: "right" }}>
            <HomeIcon from={from} themeType={themeType} />

            <ReceiptsIcon from={from} themeType={themeType} />

            <SettingsIcon from={from} themeType={themeType} />
          </div>
        </div>
      )}
    </AppContext.Consumer>
  )
}
